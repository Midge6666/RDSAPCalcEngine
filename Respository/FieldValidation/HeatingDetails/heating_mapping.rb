class HeatingLink
  def initialize()
  end
end
# <summary>
# The heating mapping class basically represents a table of parameters regarding
# specific heating systems, this simplifies the UI logic for the heating system
# fields as rather than having to implement convoluted logic for each field to
# determine the availability of options simple queries can be performed against
# the table using LINQ instead.
# </summary>
class HeatingMapping
  def initialize()
    if (HeatingMapper == nil) or (HeatingMapper.Count == 0) then
      self.CreateHeatingMap()
    end
  end

  def HeatingMapper
  end

  def HeatingMapper=(value)
  end

  def HeatingMapping.CreateHeatingMap()
    self.HeatingMapper = List[HeatingLink].new()
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_MANUAL, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_AUTO, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_OPEN_BACK, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_CLOSED_BACK, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_RANGE_COOKER, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_MANUAL_UNHEATED, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_AUTO_HEATED, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_WOOD_INDEPENDANT, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_STOVE_WITH_BOILER, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_DIRECT_BOILER, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_CPSU, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_DRYCORE_STORAGE, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_WATER_STORAGE, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.HEAT_PUMPS, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_GROUND_HEATPUMP, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.HEAT_PUMPS, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_GROUND_HEATPUMP_AUX_HEATER, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.HEAT_PUMPS, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_WATER_HEATPUMP, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.HEAT_PUMPS, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_AIR_HEATPUMP, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.COMMUNITY_HEATING, HEATSYS_FUEL_CATEGORY.PLANT, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.COMMUMITY_HEATING_BOILERS, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.COMMUNITY_HEATING, HEATSYS_FUEL_CATEGORY.PLANT, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.COMMUNITY_HEATING_BOILERS_CHP, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ELECTRIC_STORAGE, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_LARGE_STORAGE_HEATERS, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ELECTRIC_STORAGE, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_SLIMLINE_STORAGE_HEATERS, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ELECTRIC_STORAGE, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_FAN_STORAGE_HEATERS, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ELECTRIC_STORAGE, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_INTEGRATED_HEATERS, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ELECTRIC_UNDERFLOOR, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_UNDERFLOOR_OFFPEAK, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ELECTRIC_UNDERFLOOR, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_UNDERFLOOR_COMBINED, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ELECTRIC_UNDERFLOOR, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_UNDERFLOOR_DIRECT, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.GAS_WARMAIR_POST97, FLUE_AVAILABILITY_CODE.FAC_FAN_ASSISTED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.GAS_WARMAIR_PRE98, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.GAS_WARMAIR_HEAT_RECOVERY, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.GAS_WARMAIR_CONDENSING, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.OIL_WARMAIR, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_ELECTRICAIRE_SYSTEM, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR_HEAT_PUMP, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_GROUND_AIR_HEATPUMP, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR_HEAT_PUMP, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_GROUND_AIR_HEATPUMP_AUX, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR_HEAT_PUMP, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_WATER_AIR_HEATPUMP, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.WARM_AIR_HEAT_PUMP, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_AIR_AIR_HEATPUMP, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersOpenflue, HEATING_SYSTEM.GAS_FIRE_PRE80, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersOpenflue, HEATING_SYSTEM.GAS_FIRE_PRE80_BACKBOILER, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersOpenflue, HEATING_SYSTEM.GAS_FIRE_OPEN_FLUE, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersOpenflue, HEATING_SYSTEM.GAS_FIRE_OPEN_FLUE_BACKBOILER, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersOpenflue, HEATING_SYSTEM.GAS_FIRE_FLUSH_SEALED, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersOpenflue, HEATING_SYSTEM.GAS_FIRE_FLUSH_SEALED_BACKBOILER, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersBalancedflue, HEATING_SYSTEM.GAS_FIRE_FLUSH_SEALED_FANNED, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersBalancedflue, HEATING_SYSTEM.GAS_FIRE_BALANCED_FLUE, FLUE_AVAILABILITY_CODE.FAC_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersBalancedflue, HEATING_SYSTEM.GAS_FIRE_CLOSED, FLUE_AVAILABILITY_CODE.FAC_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersBalancedflue, HEATING_SYSTEM.GAS_FIRE_CONDENSING, FLUE_AVAILABILITY_CODE.FAC_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersOpenflue, HEATING_SYSTEM.GAS_FIRE_DECORATIVE_TO_CHIMNEY, FLUE_AVAILABILITY_CODE.FAC_CHIMNEY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_RoomHeatersFlueless, HEATING_SYSTEM.GAS_FIRE_FLUELESS, FLUE_AVAILABILITY_CODE.FAC_FLUELESS))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.OIL_HEATER_PRE00, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.OIL_HEATER_PRE00_BB_NORADS, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.OIL_HEATER_POST99, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.OIL_HEATER_POST99_BB_NORADS, FLUE_AVAILABILITY_CODE.FAC_OPEN))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.OIL_BIOETHANOL_SECONDARY_ONLY, FLUE_AVAILABILITY_CODE.FAC_NONE))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_OPEN_FIRE, FLUE_AVAILABILITY_CODE.FAC_CHIMNEY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_OPEN_FIRE_BB, FLUE_AVAILABILITY_CODE.FAC_CHIMNEY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_CLOSED_HEATER, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_CLOSED_HEATER_BB, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_STOVE, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.SOLID, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.SOLID_STOVE_BOILER_BB, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_PANEL_HEATERS, FLUE_AVAILABILITY_CODE.FAC_NONE))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_PORTABLE_HEATERS, FLUE_AVAILABILITY_CODE.FAC_NONE))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.ROOM_HEATERS, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_WATER_OIL_RADS, FLUE_AVAILABILITY_CODE.FAC_NONE))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilers1998OrLater, HEATING_SYSTEM.GAS_POST97_AUTO, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilers1998OrLater, HEATING_SYSTEM.GAS_POST97_CONDENSING, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilers1998OrLater, HEATING_SYSTEM.GAS_POST97_COMBI_AUTO, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilers1998OrLater, HEATING_SYSTEM.GAS_POST97_CONDENSING_COMBI, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilers1998OrLater, HEATING_SYSTEM.GAS_POST97_PILOT, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilers1998OrLater, HEATING_SYSTEM.GAS_POST97_COMBI_PILOT, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilers1998OrLater, HEATING_SYSTEM.GAS_POST97_BACK, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithFanAssistedFlue, HEATING_SYSTEM.GAS_FAN_PRE98, FLUE_AVAILABILITY_CODE.FAC_FAN_ASSISTED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithFanAssistedFlue, HEATING_SYSTEM.GAS_FAN_PRE98_COMBI, FLUE_AVAILABILITY_CODE.FAC_FAN_ASSISTED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithFanAssistedFlue, HEATING_SYSTEM.GAS_FAN_PRE98_CONDENSING_COMBI, FLUE_AVAILABILITY_CODE.FAC_FAN_ASSISTED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithFanAssistedFlue, HEATING_SYSTEM.GAS_FAN_PRE98_CONDENSING, FLUE_AVAILABILITY_CODE.FAC_FAN_ASSISTED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithBalancedOrOpenFlue, HEATING_SYSTEM.GAS_PRE98_WALL, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithBalancedOrOpenFlue, HEATING_SYSTEM.GAS_PRE98_FLOOR_OLD, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithBalancedOrOpenFlue, HEATING_SYSTEM.GAS_PRE98_FLOOR, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithBalancedOrOpenFlue, HEATING_SYSTEM.GAS_PRE98_COMBI, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasBoilersPre1998WithBalancedOrOpenFlue, HEATING_SYSTEM.GAS_PRE98_BACK, FLUE_AVAILABILITY_CODE.FAC_OPEN_OR_BALANCED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_CPSU, HEATING_SYSTEM.GAS_CPSU_NORMAL, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_CPSU, HEATING_SYSTEM.GAS_CPSU_CONDENSING, FLUE_AVAILABILITY_CODE.FAC_FAN_ASSISTED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasRangeCookerBoilers, HEATING_SYSTEM.GAS_RANGE_SINGLE, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasRangeCookerBoilers, HEATING_SYSTEM.GAS_RANGE_SINGLE_AUTO, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.GAS, HEATING_SYSTEM_SUB_TYPE.HSMT_GasRangeCookerBoilers, HEATING_SYSTEM.GAS_RANGE_TWIN, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilBoilersNonCombi, HEATING_SYSTEM.OIL_POST97_STANDARD, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilBoilersNonCombi, HEATING_SYSTEM.OIL_PRE98_STANDARD, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilBoilersNonCombi, HEATING_SYSTEM.OIL_CONDENSING, FLUE_AVAILABILITY_CODE.FAC_FAN_ASSISTED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilBoilersNonCombi, HEATING_SYSTEM.OIL_PRE00_BACK, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilBoilersNonCombi, HEATING_SYSTEM.OIL_POST99_BACK, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilBoilersCombi, HEATING_SYSTEM.OIL_PRE98_COMBI, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilBoilersCombi, HEATING_SYSTEM.OIL_POST97_COMBI, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilBoilersCombi, HEATING_SYSTEM.OIL_CONDENSING_COMBI, FLUE_AVAILABILITY_CODE.FAC_FAN_ASSISTED))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilRangeCookerBoilers, HEATING_SYSTEM.OIL_RANGE_SINGLE, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.CENTRAL_HEATING, HEATSYS_FUEL_CATEGORY.OIL, HEATING_SYSTEM_SUB_TYPE.HSMT_OilRangeCookerBoilers, HEATING_SYSTEM.OIL_RANGE_TWIN, FLUE_AVAILABILITY_CODE.FAC_ANY))
    self.HeatingMapper.Add(HeatingMapping.CreateHeatLink(HEATING_TYPE.OTHER_HEATING, HEATSYS_FUEL_CATEGORY.ELECTRICITY, HEATING_SYSTEM_SUB_TYPE.HSMT_None, HEATING_SYSTEM.ELEC_CEILING_HEATING, FLUE_AVAILABILITY_CODE.FAC_NOT_REQUIRED))
  end

  def HeatingMapping.GetFlueAvailabilityForSubType(subType)
    flueAvailability = self.HeatingMapperh.SystemSubType == subTypeh.FlueAvailability
    return (flueAvailability.Distinct())
  end

  def HeatingMapping.GetFlueAvailabilityForSystemType(type)
    flueAvailability = self.HeatingMapperh.Type == typeh.FlueAvailability
    return (flueAvailability.Distinct())
  end

  def HeatingMapping.GetFlueAvailabilityForFuelType(fuel)
    fuelCat = HeatingMapping.GetFuelCategoryFromType(fuel)
    flueAvailability = self.HeatingMapperh.Fuel == fuelCath.FlueAvailability
    return (flueAvailability.Distinct())
  end

  def HeatingMapping.GetSystemInfo(systemCode)
    heatSystem = self.HeatingMapperh.System == systemCodeh
    return ((heatSystem.Count() > 0) ? heatSystem.First() : nil)
  end

  def HeatingMapping.GetAllSystemInfoForFuelType(fuelType)
    fuelCat = HeatingMapping.GetFuelCategoryFromType(fuelType)
    heatSystem = self.HeatingMapperh.Fuel == fuelCath
    return heatSystem.ToList()
  end

  def HeatingMapping.GetAllSystemInfoForSubType(subType)
    heatSystem = self.HeatingMapperh.SystemSubType == subTypeh
    return heatSystem.ToList()
  end

  def HeatingMapping.GetAllSystemInfoForHeatingType(heatingType)
    heatSystem = self.HeatingMapperh.Type == heatingTypeh
    return heatSystem.ToList()
  end

  def HeatingMapping.GetAllSystemInfoForSystem(heatingSystem)
    heatSystem = self.HeatingMapperh.System == heatingSystemh
    return heatSystem.ToList()
  end

  def HeatingMapping.GetFuelCategoryFromType(fuelType)
    case fuelType
      when HEATSYS_FUEL.HSFUEL_ANTHRACITE, HEATSYS_FUEL.HSFUEL_COAL, HEATSYS_FUEL.HSFUEL_SMOKELESS, HEATSYS_FUEL.HSFUEL_SOLID_MULTIF, HEATSYS_FUEL.HSFUEL_WOODCHIPS, HEATSYS_FUEL.HSFUEL_WOODLOGS, HEATSYS_FUEL.HSFUEL_WOODPELLETS, HEATSYS_FUEL.HSFUEL_CH_BIOMASS, HEATSYS_FUEL.HSFUEL_CH_WASTE
        return HEATSYS_FUEL_CATEGORY.SOLID
      when HEATSYS_FUEL.HSFUEL_MAINSGAS, HEATSYS_FUEL.HSFUEL_LPG_BULK, HEATSYS_FUEL.HSFUEL_LPG_BOTTLE, HEATSYS_FUEL.HSFUEL_CH_BIOGAS
        return HEATSYS_FUEL_CATEGORY.GAS
      when HEATSYS_FUEL.HSFUEL_ELECTRIC
        return HEATSYS_FUEL_CATEGORY.ELECTRICITY
      when HEATSYS_FUEL.HSFUEL_OIL
        return HEATSYS_FUEL_CATEGORY.OIL
      else
        return HEATSYS_FUEL_CATEGORY.NONE
    end
  end

  def HeatingMapping.GetFuelTypesFromCategory(fuelCategory)
    fuelTypes = List[HEATSYS_FUEL].new()
    case fuelCategory
      when HEATSYS_FUEL_CATEGORY.SOLID
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_ANTHRACITE)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_COAL)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_SMOKELESS)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_SOLID_MULTIF)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_WOODCHIPS)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_WOODLOGS)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_WOODPELLETS)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_CH_BIOMASS)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_CH_WASTE)
      when HEATSYS_FUEL_CATEGORY.GAS
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_MAINSGAS)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_LPG_BULK)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_LPG_BOTTLE)
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_CH_BIOGAS)
      when HEATSYS_FUEL_CATEGORY.ELECTRICITY
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_ELECTRIC)
      when HEATSYS_FUEL_CATEGORY.OIL
        fuelTypes.Add(HEATSYS_FUEL.HSFUEL_OIL)
      else
        fuelTypes.Add(HEATSYS_FUEL.HS_FUEL_NONE)
    end
    return fuelTypes
  end

  def HeatingMapping.CreateHeatLink(type, fuel, subType, system, flue)
    link = HeatingLink.new()
    link.Type = type
    link.Fuel = fuel
    link.SystemSubType = subType
    link.System = system
    link.FlueAvailability = flue
    return link
  end
end